//
//  SchoolSearchWorkerTests.swift
//  NYC Youths
//
//  Created by Kartikeya Kaushal on 3/15/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import NYC_Youths
import XCTest

class SchoolSearchWorkerTests: XCTestCase, SchoolSearchWorkerDelegate
{
    // MARK: Subject under test
    
    var sut: SchoolSearchWorker!
    var mockAPIClient: APIClient!  // TODO: Refactor to an actual mock to avoid testing APIClient twice
    
    var successExpectation: XCTestExpectation!
    var failureExpectation: XCTestExpectation!
    // MARK: Test lifecycle
    
    override func setUp()
    {
        super.setUp()
    }
    
    override func tearDown()
    {
        super.tearDown()
    }
    
    // MARK: Test setup
    
    // MARK: Test doubles
    
        func handleSchoolData(_ data: [SchoolData]) {
            successExpectation.fulfill()
        }
        
        func handleError(_ error: Error) {
            failureExpectation.fulfill()
        }
    
    // MARK: Tests
    // TODO: Make mock data for api return
    func testGetSchoolsFromSource()
    {
        self.successExpectation = self.expectation(description: "Success")
        sut = SchoolSearchWorker(client: setupClient(data: Data(base64Encoded: "[{}]"), statusCode: 200, error: nil), delegate: self)
                
        sut.getData()
        wait(for: [successExpectation], timeout: 2)

    }
    
    func testErrorFromSchoolDataSource() {
        self.failureExpectation = self.expectation(description: "Failure")
        sut = SchoolSearchWorker(client: setupClient(data: nil, statusCode: 500, error: NSError(domain: "Test Error", code: 500, userInfo: nil)), delegate: self)

        sut.getData()
        wait(for: [failureExpectation], timeout: 2)

    }
    
    private func setupClient(data: Data?, statusCode: Int, error: Error?) -> APIClient {
        let mockSession = MockURLSession(data: data, responseCode: statusCode, error: error)
        
        return NYC_Youths.APIClient(network: mockSession)
    }

}//end SchoolSearchWorkerTests
